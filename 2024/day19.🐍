"""
☀1️⃣9️⃣❕
"""

🧼 = sorted
🖨 = print
🤐 = zip
👆 = abs
✅ = True
❌ = False

🛺 = min
🚛 = max
📏 = len
👩‍🌾 = range
🗺 = map
➕ = sum
⛓ = list
🎒 = set
✒️  = lambda ✖: str(✖)
🪓 = lambda ⭐, ✨: ⭐.split(✨)
📥 = lambda ⛓, ✨: ⛓.append(✨)
📥🎒 = lambda 🎒, ✨: 🎒.add(✨)
🔢 = lambda ✖: int(✖)
⏯⭐❓ = lambda ⭐, ✨: ⭐.startswith(✨)

0️⃣ = 0; 1️⃣ = 1; 2️⃣ = 2; 3️⃣ = 3; 4️⃣ = 4; 5️⃣ = 5;
6️⃣ = 6; 7️⃣ = 7; 8️⃣ = 8; 9️⃣ = 9; 🔟 = 10
2️⃣5️⃣ = 25; 7️⃣5️⃣ = 75; 2️⃣0️⃣2️⃣4️⃣ = 2024; 💯 = 100;
1️⃣2️⃣ = 12; 7️⃣0️⃣ = 70; 1️⃣0️⃣2️⃣4️⃣ = 1024

def 👓(✏):
    return [🚣‍♂️.strip() for 🚣‍♂️ in open(✏).readlines() if 🚣‍♂️.strip()]

def 👓🤏(✏):
    return open(✏).read()

def 💉(⭐, ↔, ✨):
    global 1️⃣
    return ⭐[:↔] + ✨ + ⭐[↔ + 1️⃣:]

# 🟩🟩🟩🅿1️⃣🟩🟩🟩

# 🧾 = 👓🤏('input/19.example.txt')
🧾 = 👓🤏('input/19.txt')

🎨🧾, 🖼🧾 = 🪓(🧾, '\n\n')
🎨⛓ = 🪓(🎨🧾, ', ')
🖼⛓ = 🪓(🖼🧾,'\n')

✅🖼🥧🎒 = 🎒()
❌🖼🥧🎒 = 🎒()

def ❓(🖼):
    global 🎨⛓, ❓, 📏, ✅, ❌, ✅🖼🥧🎒, ❌🖼🥧🎒, 📥🎒, ⏯⭐❓
    if 🖼 == '' or 🖼 in ✅🖼🥧🎒:
        return ✅
    if 🖼 in ❌🖼🥧🎒:
        return ❌

    for 🎨 in 🎨⛓:
        if ⏯⭐❓(🖼, 🎨) and ❓(🖼[📏(🎨):]):
            📥🎒(✅🖼🥧🎒, 🖼)
            return ✅

    📥🎒(❌🖼🥧🎒, 🖼)
    return ❌

🎉 = ➕(❓(🖼) for 🖼 in 🖼⛓)

🖨(🎉)