"""
☀1️⃣4️⃣❕
"""

🧼 = sorted
🖨 = print
🤐 = zip
👆 = abs
✅ = True
❌ = False

🛺 = min
🚛 = max
📏 = len
👩‍🌾 = range
🗺 = map
➕ = sum
⛓ = list
🎒 = set
✒️  = lambda ✖: str(✖)
🪓 = lambda ⭐, ✨: ⭐.split(✨)
📥 = lambda ⛓, ✨: ⛓.append(✨)
📥🎒 = lambda 🎒, ✨: 🎒.add(✨)
🔢 = lambda ✖: int(✖)

0️⃣ = 0; 1️⃣ = 1; 2️⃣ = 2; 3️⃣ = 3; 4️⃣ = 4; 5️⃣ = 5;
6️⃣ = 6; 7️⃣ = 7; 8️⃣ = 8; 9️⃣ = 9; 🔟 = 10
2️⃣5️⃣ = 25; 7️⃣5️⃣ = 75; 2️⃣0️⃣2️⃣4️⃣ = 2024; 💯 = 100;


def 👓(✏):
    return [🚣‍♂️.strip() for 🚣‍♂️ in open(✏).readlines() if 🚣‍♂️.strip()]

def 👓🤏(✏):
    return open(✏).read()


# 🟩🟩🟩🅿1️⃣🟩🟩🟩

# 🧾 = 👓('input/14.example.txt')
# 📏↔ = 11
# 📏↕ = 7

🧾 = 👓('input/14.txt')
📏↔ = 101
📏↕ = 103

🤖⛓ = []
for 🚣‍♀️ in 🧾:
    📍⭐, 🏃‍♀️⭐ = 🪓(🚣‍♀️, ' ')
    📍↔, 📍↕ =  🗺(🔢, 🪓(📍⭐[2️⃣:], ','))
    🏃‍♀️↔, 🏃‍♀️↕ =  🗺(🔢, 🪓(🏃‍♀️⭐[2️⃣:], ','))
    📥(🤖⛓, ((📍↔, 📍↕),(🏃‍♀️↔, 🏃‍♀️↕)))

for ⏱ in 👩‍🌾(💯):
    for 👇 in 👩‍🌾(📏(🤖⛓)):
        ((📍↔, 📍↕),(🏃‍♀️↔, 🏃‍♀️↕)) = 🤖⛓[👇]
        
        🆕📍↔ = (📍↔ + 🏃‍♀️↔) % 📏↔
        🆕📍↕ = (📍↕ + 🏃‍♀️↕) % 📏↕

        🤖⛓[👇] = ((🆕📍↔, 🆕📍↕),(🏃‍♀️↔, 🏃‍♀️↕))

🔎↖ = 0️⃣
🔎↗ = 0️⃣
🔎↙ = 0️⃣
🔎↘ = 0️⃣

for ((📍↔, 📍↕),(🏃‍♀️↔, 🏃‍♀️↕)) in 🤖⛓:
    if 📍↔ < 📏↔ // 2️⃣ and 📍↕ < 📏↕ // 2️⃣:
        🔎↖ += 1️⃣
    elif 📍↔ > 📏↔ // 2️⃣ and 📍↕ < 📏↕ // 2️⃣:
        🔎↗ += 1️⃣
    elif 📍↔ < 📏↔ // 2️⃣ and 📍↕ > 📏↕ // 2️⃣:
            🔎↙ += 1️⃣
    elif 📍↔ > 📏↔ // 2️⃣ and 📍↕ > 📏↕ // 2️⃣:
            🔎↘ += 1️⃣

🎉 = 🔎↖ * 🔎↗ * 🔎↙ * 🔎↘

🖨(🎉)