"""
☀🔟❕
"""

🧼 = sorted
🖨 = print
🤐 = zip
👆 = abs
✅ = True
❌ = False

🛺 = min
🚛 = max
📏 = len
👩‍🌾 = range
🗺 = map
⛓ = list
🎒 = set
✒️  = lambda ✖: str(✖)
🪓 = lambda ⭐, ✨: ⭐.split(✨)
📥 = lambda ⛓, ✨: ⛓.append(✨)
📥🎒 = lambda 🎒, ✨: 🎒.add(✨)
🔢 = lambda ✖: int(✖)

0️⃣ = 0; 1️⃣ = 1; 2️⃣ = 2; 3️⃣ = 3; 4️⃣ = 4; 5️⃣ = 5;
6️⃣ = 6; 7️⃣ = 7; 8️⃣ = 8; 9️⃣ = 9; 🔟 = 10


def 👓(✏):
    return [🚣‍♂️.strip() for 🚣‍♂️ in open(✏).readlines() if 🚣‍♂️.strip()]

def 👓🤏(✏):
    return open(✏).read()


# 🟩🟩🟩🅿1️⃣🟩🟩🟩

def 🚶(🧾, ↔️,↕️, ✖️):
    global 1️⃣, 9️⃣, 📏, 🔢, 🚶, 🎒

    🗻🎒 = 🎒()

    for ↔️🚶, ↕️🚶 in [(↔️ - 1, ↕️), (↔️ + 1, ↕️), (↔️, ↕️ - 1), (↔️, ↕️ + 1)]:
        if ↕️🚶 < 0 or ↕️🚶 >= 📏(🧾) or ↔️🚶 < 0 or ↔️🚶 >= 📏(🧾[↕️]):
            continue
        ◼️ = 🔢(🧾[↕️🚶][↔️🚶])
        if ◼️ != ✖️ + 1️⃣:
            continue
        if ◼️==9️⃣:
            🗻🎒.add((↔️🚶, ↕️🚶))
        🗻🎒.update(🚶(🧾, ↔️🚶,↕️🚶, ✖️ + 1️⃣))
    return 🗻🎒


🧾 = 👓('input/🔟.txt')
🎉 = 0

for ↕️ in 👩‍🌾(📏(🧾)):
    for ↔️ in 👩‍🌾(📏(🧾[↕️])):
        if 🧾[↕️][↔️] == '0':
            🎉 += 📏(🚶(🧾, ↔️,↕️, 0️⃣))

🖨(🎉)