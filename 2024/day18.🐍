"""
☀1️⃣8️⃣❕
"""

🧼 = sorted
🖨 = print
🤐 = zip
👆 = abs
✅ = True
❌ = False

🛺 = min
🚛 = max
📏 = len
👩‍🌾 = range
🗺 = map
➕ = sum
⛓ = list
🎒 = set
✒️  = lambda ✖: str(✖)
🪓 = lambda ⭐, ✨: ⭐.split(✨)
📥 = lambda ⛓, ✨: ⛓.append(✨)
📥🎒 = lambda 🎒, ✨: 🎒.add(✨)
🔢 = lambda ✖: int(✖)

0️⃣ = 0; 1️⃣ = 1; 2️⃣ = 2; 3️⃣ = 3; 4️⃣ = 4; 5️⃣ = 5;
6️⃣ = 6; 7️⃣ = 7; 8️⃣ = 8; 9️⃣ = 9; 🔟 = 10
2️⃣5️⃣ = 25; 7️⃣5️⃣ = 75; 2️⃣0️⃣2️⃣4️⃣ = 2024; 💯 = 100;
1️⃣2️⃣ = 12; 7️⃣0️⃣ = 70; 1️⃣0️⃣2️⃣4️⃣ = 1024

def 👓(✏):
    return [🚣‍♂️.strip() for 🚣‍♂️ in open(✏).readlines() if 🚣‍♂️.strip()]

def 👓🤏(✏):
    return open(✏).read()

def 💉(⭐, ↔, ✨):
    global 1️⃣
    return ⭐[:↔] + ✨ + ⭐[↔ + 1️⃣:]

# 🟩🟩🟩🅿1️⃣🟩🟩🟩

# 🧾 = 👓('input/18.example.txt')
# 📏↘ = 6️⃣
# ⏱ = 1️⃣2️⃣

🧾 = 👓('input/18.txt')
📏↘ = 7️⃣0️⃣
⏱ = 1️⃣0️⃣2️⃣4️⃣

💥🎒 = 🎒()

for 🚣‍♂️ in 🧾[:⏱]:
    ↔, ↕ = 🪓(🚣‍♂️,',')
    📥🎒(💥🎒, (🔢(↔), 🔢(↕)))

👇⛓ = [(📏↘ * 2️⃣,  (0️⃣,0️⃣), 0️⃣)]
👆⛓ = 🎒()

while 👇⛓:
    🗼, (📍↔, 📍↕), 🚗 = 👇⛓.pop(0️⃣)
    📥🎒(👆⛓, (📍↔, 📍↕))

    if (📍↔, 📍↕) == (📏↘, 📏↘):
        🖨(🚗)
        break

    for 🆕📍 in [
        (📍↔ + 1️⃣, 📍↕),
        (📍↔ - 1️⃣, 📍↕),
        (📍↔, 📍↕ + 1️⃣),
        (📍↔, 📍↕ - 1️⃣)
        ]:
        if 🆕📍 in 👆⛓:
            continue
        if 🆕📍 in 💥🎒:
            continue
        if 🆕📍[0️⃣] < 0️⃣ or 🆕📍[1️⃣] < 0️⃣:
            continue
        if 🆕📍[0️⃣] > 📏↘ or 🆕📍[1️⃣] > 📏↘:
            continue
        🧲 = ❌
        for (🔎🔎, 📍📍, 🚗🚗) in 👇⛓:
            if 🆕📍 == 📍📍:
                🧲 = ✅
                break
        if 🧲:
            continue

        🔎 = 📏↘ - 🆕📍[0️⃣] + 📏↘ - 🆕📍[1️⃣] 
        📥(👇⛓, (🚗+1️⃣+🔎, 🆕📍, 🚗 + 1️⃣))
    👇⛓ = 🧼(👇⛓)
        

    