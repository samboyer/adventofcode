"""
☀1️⃣1️⃣❕
"""

🧼 = sorted
🖨 = print
🤐 = zip
👆 = abs
✅ = True
❌ = False

🛺 = min
🚛 = max
📏 = len
👩‍🌾 = range
🗺 = map
➕ = sum
⛓ = list
🎒 = set
✒️  = lambda ✖: str(✖)
🪓 = lambda ⭐, ✨: ⭐.split(✨)
📥 = lambda ⛓, ✨: ⛓.append(✨)
📥🎒 = lambda 🎒, ✨: 🎒.add(✨)
🔢 = lambda ✖: int(✖)

0️⃣ = 0; 1️⃣ = 1; 2️⃣ = 2; 3️⃣ = 3; 4️⃣ = 4; 5️⃣ = 5;
6️⃣ = 6; 7️⃣ = 7; 8️⃣ = 8; 9️⃣ = 9; 🔟 = 10
2️⃣5️⃣ = 25; 7️⃣5️⃣ = 75; 2️⃣0️⃣2️⃣4️⃣ = 2024;


def 👓(✏):
    return [🚣‍♂️.strip() for 🚣‍♂️ in open(✏).readlines() if 🚣‍♂️.strip()]

def 👓🤏(✏):
    return open(✏).read()


# 🟩🟩🟩🅿1️⃣🟩🟩🟩

def 🌊🪣(🧾, ↔️, ↕️):
    global 📏, 🎒,0️⃣,1️⃣, 📥🎒, 📥
    👇🎒 = 🎒()

    🌱 = 🧾[↕️][↔️]

    📏↕️ = 📏(🧾)
    📏↔️ = 📏(🧾[0️⃣])

    ⛓️ = [(↔️, ↕️)]
    while ⛓️:
        (↔️, ↕️) = ⛓️.pop()
        📥🎒(👇🎒, (↔️, ↕️))

        for (↔️↔️, ↕️↕️) in [
            (↔️ - 1️⃣, ↕️),
            (↔️ + 1️⃣, ↕️),
            (↔️, ↕️ - 1️⃣),
            (↔️, ↕️ + 1️⃣)
        ]:
            if (
                ↔️↔️ < 0️⃣
                or ↔️↔️ >= 📏↔️
                or ↕️↕️ < 0️⃣
                or ↕️↕️ >= 📏↕️):
                continue
            if (
                🧾[↕️↕️][↔️↔️] != 🌱): 
                continue
            if (
                (↔️↔️, ↕️↕️) not in 👇🎒
                and (↔️↔️, ↕️↕️) not in ⛓️
            ):
                📥(⛓️, (↔️↔️, ↕️↕️))
    
    return 👇🎒


🧾 = 👓('input/12.txt')
📏↕️ = 📏(🧾)
📏↔️ = 📏(🧾[0️⃣])

🎉 = 0
for ↕️ in 👩‍🌾(📏↕️):
    for ↔️ in 👩‍🌾(📏↔️):
        if 🧾[↕️][↔️] != '🪨':
            👇🎒 = 🌊🪣(🧾, ↔️, ↕️)

            🔴 = 📏(👇🎒)
            ⭕ = 4️⃣ * 🔴
            for (🌱↔️, 🌱↕️) in 👇🎒:
                for (↔️↔️, ↕️↕️) in [
                    (🌱↔️ - 1️⃣, 🌱↕️),
                    (🌱↔️ + 1️⃣, 🌱↕️),
                    (🌱↔️, 🌱↕️ - 1️⃣),
                    (🌱↔️, 🌱↕️ + 1️⃣)
                ]:
                    if (↔️↔️, ↕️↕️) in 👇🎒:
                        ⭕ -= 1️⃣
            🎉 += 🔴 * ⭕
            for (🌱↔️, 🌱↕️) in 👇🎒:
                🧾[🌱↕️] = 🧾[🌱↕️][:🌱↔️] + '🪨' + 🧾[🌱↕️][🌱↔️ + 1️⃣:]

🖨(🎉)